image: mcr.microsoft.com/dotnet/sdk:9.0

variables:
  SOURCE_CODE_PATH: "src/*"
  ASPNETCORE_ENVIRONMENT: "Development"
  HUSKY: 0

include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml

gemnasium-python-dependency_scanning:
  before_script:
    - apt-get -qqy update && apt-get install -qqy cargo

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - "$SOURCE_CODE_PATH/obj/project.assets.json"
    - "$SOURCE_CODE_PATH/obj/*.csproj.nuget.*"
    - ".nuget"
  policy: pull-push

build:
  stage: build
  before_script:
    - "dotnet restore --packages .nuget --verbosity q"
  script:
    - "dotnet build -c Release --no-restore --verbosity q"

unit_tests:
  stage: test
  cache: []
  needs:
    - build
  coverage: '/TOTAL_COVERAGE=(\d+.\d+)/'
  before_script:
    - "dotnet restore --packages .nuget --verbosity q"
    - 'export PATH="$PATH:/root/.dotnet/tools"'
    - "dotnet tool install dotnet-reportgenerator-globaltool --global --verbosity q"
    - "apt-get -qqy update && apt-get install -qqy bc"
  script:
    - dotnet test --collect:"XPlat Code Coverage" --verbosity q --logger "junit;MethodFormat=Class;FailureBodyFormat=Verbose" -- NUnit.Where="namespace == BibleBot.Tests.Backend"
    - reportgenerator -reports:"test/**/TestResults/**/coverage.cobertura.xml" -targetdir:"." -reporttypes:"cobertura"
    - COVERAGE_VALUE=$(grep -oPm 1 'line-rate="\K([0-9.]+)' "./Cobertura.xml")
    - COVERAGE=$(echo "scale=2; ($COVERAGE_VALUE * 100)/1" | bc)
    - 'echo "TOTAL_COVERAGE=$COVERAGE%"'
    - bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r Cobertura.xml
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - ./**/TestResults.xml
      - ./Cobertura.xml
    reports:
      junit:
        - ./**/TestResults.xml
      coverage_report:
        coverage_format: cobertura
        path: ./Cobertura.xml
