<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VersionStatusPreference" xml:space="preserve">
    <value>Your preferred version is set to {0}.</value>
    <comment>To indicate version preference.</comment>
  </data>
  <data name="VersionStatusServerPreference" xml:space="preserve">
    <value>The server's preferred version is set to {1}.</value>
    <comment>To indicate server version preference.</comment>
  </data>
  <data name="SetVersionCommandDescription" xml:space="preserve">
    <value>set your preferred version</value>
    <comment>Description for /setversion command.</comment>
  </data>
  <data name="SetServerVersionCommandDescription" xml:space="preserve">
    <value>set the server's default version (staff only)</value>
    <comment>Description for /setserverversion command.</comment>
  </data>
  <data name="VersionInfoCommandDescription" xml:space="preserve">
    <value>get information on a version</value>
    <comment>Description for /versioninfo command.</comment>
  </data>
  <data name="ListVersionsCommandDescription" xml:space="preserve">
    <value>list all available versions</value>
    <comment>Description for /listversions command.</comment>
  </data>
  <data name="BookListCommandDescription" xml:space="preserve">
    <value>list all available books</value>
    <comment>Description for /booklist command.</comment>
  </data>
  <data name="SetVersionSuccess" xml:space="preserve">
    <value>Set version successfully.</value>
    <comment>Response for successful usage of /setversion.</comment>
  </data>
  <data name="SetVersionFailure" xml:space="preserve">
    <value>Failed to set version, see `/listversions`.</value>
    <comment>Response for failed usage of /setversion.</comment>
  </data>
  <data name="SetServerVersionSuccess" xml:space="preserve">
    <value>Set server version successfully.</value>
    <comment>Response for successful usage of /setserverversion.</comment>
  </data>
  <data name="SetServerVersionSuccessDailyVerseWarning" xml:space="preserve">
    <value>This version will not work with automatic daily verses as it does not support both the Old and New Testaments. If this is a concern to you, use `/versioninfo` to help you identify versions that support both.</value>
    <comment>Appended message for successful usage of /setserverversion if version does not have both testaments.</comment>
  </data>
  <data name="SetServerVersionFailure" xml:space="preserve">
    <value>Failed to set server version, see `/listversions`.</value>
    <comment>Response for failed usage of /setserverversion.</comment>
  </data>
  <data name="VersionInfoContainsOT" xml:space="preserve">
    <value>Contains Old Testament</value>
    <comment>To indicate whether version supports the Old Testament.</comment>
  </data>
  <data name="VersionInfoContainsNT" xml:space="preserve">
    <value>Contains New Testament</value>
    <comment>To indicate whether version supports the New Testament.</comment>
  </data>
  <data name="VersionInfoContainsDEU" xml:space="preserve">
    <value>Contains Apocrypha/Deuterocanon</value>
    <comment>To indicate whether version supports the Apocrypha/Deuterocanon.</comment>
  </data>
  <data name="VersionInfoSource" xml:space="preserve">
    <value>Source</value>
    <comment>To indicate internal source for version text.</comment>
  </data>
  <data name="VersionInfoDailyVerseWarning" xml:space="preserve">
    <value>This version will not work with automatic daily verses.</value>
    <comment>To indicate whether a version is compatible with automatic daily verses.</comment>
  </data>
  <data name="VersionInfoBookListNotice" xml:space="preserve">
    <value>See `/booklist` for a list of available books.</value>
    <comment>To point user to /booklist to see available books.</comment>
  </data>
  <data name="InvalidVersion" xml:space="preserve">
    <value>I couldn't find that version, are you sure you used the right acronym?</value>
    <comment>Response for failed usage of /versioninfo.</comment>
  </data>
  <data name="BookListVersionIneligible" xml:space="preserve">
    <value>This version is not eligible for this command yet. Make sure you're using a version of source `bg` (see `/versioninfo`).</value>
    <comment>Response for ineligible version provided to /booklist.</comment>
  </data>
  <data name="BookListOTHeader" xml:space="preserve">
    <value>Old Testament</value>
    <comment>Header above Old Testament books.</comment>
  </data>
  <data name="BookListNTHeader" xml:space="preserve">
    <value>New Testament</value>
    <comment>Header above New Testament books.</comment>
  </data>
  <data name="BookListDEUHeader" xml:space="preserve">
    <value>Apocrypha/Deuterocanon</value>
    <comment>Header above Apocrypha/Deuterocanon books.</comment>
  </data>
  <data name="BookListInternalError" xml:space="preserve">
    <value>We encountered an internal error. Please report this to the support server (https://biblebot.xyz/discord) or make a bug report (https://biblebot.xyz/bugreport) with the following information:</value>
    <comment>Message when internal error occurred obtaining booklist.</comment>
  </data>
  <data name="BookListContainsPsalm151" xml:space="preserve">
    <value>contains Psalm 151</value>
    <comment>To indicate whether a version has Psalm 151.</comment>
  </data>
  <data name="VersionInfoDeveloperInfoHeader" xml:space="preserve">
    <value>Developer Information</value>
    <comment>Header above developer information for a version.</comment>
  </data>
  <data name="VersionInfoPublisher" xml:space="preserve">
    <value>Publisher</value>
    <comment>To indicate publisher for version text.</comment>
  </data>
</root>