version: '9.2-beta-{build}'
image: Visual Studio 2022

clone_depth: 1

services:
  - mongodb

environment:
  ASPNETCORE_ENVIRONMENT: Development
  MONGODB_CONN: mongodb://localhost:27017/BibleBotBackend
  WEBHOOK_SCRIPT: https://gitlab.com/kerygmadigital/biblebot/appveyor-discord-webhook/-/raw/master/send.ps1
  APIBIBLE_TOKEN:
    secure: NoI3xBuwnbCU1KkhhZCHqtuups493tGwfNZlBNtXvCw8cNuuTvwZZwMYm2V12EvA
  ENDPOINT_TOKEN:
    secure: iHQQcLiFJcSErA/ZLVm5WEaX8kuTrMiZ5Y28JFnmZkY=
  CODACY_PROJECT_TOKEN:
    secure: OzycgsRcoQBRFwoPdQpsV4HiGZazulGy2xMZAK0P3e+ZIL9dW4igdTmUpM3ZCXrf
  DISCORD_WEBHOOK:
    secure: c67RyRJkkEc4YgxUskPhCmMtxWdEUsrswCKA2ApLb3vLH5eSf3G0pawFOhwJEj0cPqoqiGh1v95sc23adle9F6sYA+LCTdHYtiyL3Cz5traiteg2vQavv5pzPuWjxShv7PVsRsF4P77VDIBxthK5Z0ypG6K/A4gKOT3lijFv6oE=

skip_commits:
  message: /.*\[ci skip\].*/

install:
  - cmd: dotnet restore --verbosity q

build_script:
  - cmd: dotnet publish .\src\BibleBot.Backend\BibleBot.Backend.csproj -c Release --verbosity q
  - cmd: dotnet publish .\src\BibleBot.AutomaticServices\BibleBot.AutomaticServices.csproj -c Release --verbosity q

artifacts:
  - path: .\src\BibleBot.Backend\bin\Release\net6.0\publish
    name: BibleBot.Backend
    type: ElasticBeanstalkPackage

  - path: .\src\BibleBot.AutomaticServices\bin\Release\net6.0\publish
    name: BibleBot.AutomaticServices
    type: ElasticBeanstalkPackage

  - path: .\src\BibleBot.Frontend
    name: BibleBot.Frontend
    type: ElasticBeanstalkPackage

test_script:
  - "%USERPROFILE%\\.nuget\\packages\\opencover\\4.7.1221\\tools\\OpenCover.Console.exe -register:user -target:\"dotnet.exe\" -targetargs:\"test --verbosity q --logger:\\\"trx;LogFileName=..\\..\\..\\TestResults.xml\\\"\" -output:\"coverage.xml\" -oldStyle -filter:\"+[BibleBot.Backend*]* -[BibleBot.Backend.Tests*]* -[BibleBot.Frontend*]*\" >nul"

after_test:
  - ps: |
      Invoke-WebRequest -Uri 'https://coverage.codacy.com/get.sh' -OutFile codacy.sh
  - cmd: bash codacy.sh report -r "coverage.xml" >nul
  - ps: |
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestResults.xml))

on_success:
  - ps: Invoke-RestMethod $env:WEBHOOK_SCRIPT -o send.ps1
  - ps: .\send.ps1 success $env:DISCORD_WEBHOOK
on_failure:
  - ps: Invoke-RestMethod $env:WEBHOOK_SCRIPT -o send.ps1
  - ps: .\send.ps1 failure $env:DISCORD_WEBHOOK